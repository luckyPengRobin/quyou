//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class quyouEntities : DbContext
    {
        public quyouEntities()
            : base("name=quyouEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbPO> tbPOes { get; set; }
        public virtual DbSet<tbCurrency> tbCurrencies { get; set; }
        public virtual DbSet<tbSupplier> tbSuppliers { get; set; }
        public virtual DbSet<tbBP> tbBPs { get; set; }
        public virtual DbSet<tbStatu> tbStatus { get; set; }
        public virtual DbSet<tbFile> tbFiles { get; set; }
        public virtual DbSet<tbMain> tbMains { get; set; }
    
        public virtual ObjectResult<string> Get_Request_Num(string reqstType, ObjectParameter chgNum)
        {
            var reqstTypeParameter = reqstType != null ?
                new ObjectParameter("ReqstType", reqstType) :
                new ObjectParameter("ReqstType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get_Request_Num", reqstTypeParameter, chgNum);
        }
    
        public virtual int sp_AddPO(string actType, string pNbr, string fba, string sku, Nullable<int> qty, string unitPrice, Nullable<int> currency, string oboxDim, Nullable<int> oboxQty, string weight, string destPort, string comns, Nullable<int> userId)
        {
            var actTypeParameter = actType != null ?
                new ObjectParameter("actType", actType) :
                new ObjectParameter("actType", typeof(string));
    
            var pNbrParameter = pNbr != null ?
                new ObjectParameter("PNbr", pNbr) :
                new ObjectParameter("PNbr", typeof(string));
    
            var fbaParameter = fba != null ?
                new ObjectParameter("fba", fba) :
                new ObjectParameter("fba", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var unitPriceParameter = unitPrice != null ?
                new ObjectParameter("unitPrice", unitPrice) :
                new ObjectParameter("unitPrice", typeof(string));
    
            var currencyParameter = currency.HasValue ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(int));
    
            var oboxDimParameter = oboxDim != null ?
                new ObjectParameter("OboxDim", oboxDim) :
                new ObjectParameter("OboxDim", typeof(string));
    
            var oboxQtyParameter = oboxQty.HasValue ?
                new ObjectParameter("OboxQty", oboxQty) :
                new ObjectParameter("OboxQty", typeof(int));
    
            var weightParameter = weight != null ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(string));
    
            var destPortParameter = destPort != null ?
                new ObjectParameter("destPort", destPort) :
                new ObjectParameter("destPort", typeof(string));
    
            var comnsParameter = comns != null ?
                new ObjectParameter("comns", comns) :
                new ObjectParameter("comns", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddPO", actTypeParameter, pNbrParameter, fbaParameter, skuParameter, qtyParameter, unitPriceParameter, currencyParameter, oboxDimParameter, oboxQtyParameter, weightParameter, destPortParameter, comnsParameter, userIdParameter);
        }
    
        public virtual int sp_proc_List_tsks(Nullable<int> userId, string tskName, string pageIndex, string pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var tskNameParameter = tskName != null ?
                new ObjectParameter("tskName", tskName) :
                new ObjectParameter("tskName", typeof(string));
    
            var pageIndexParameter = pageIndex != null ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(string));
    
            var pageSizeParameter = pageSize != null ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_proc_List_tsks", userIdParameter, tskNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int sp_proc_List_tsks_by_tskStatus(Nullable<int> userId, string tskStatus, string pageIndex, string pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var tskStatusParameter = tskStatus != null ?
                new ObjectParameter("tskStatus", tskStatus) :
                new ObjectParameter("tskStatus", typeof(string));
    
            var pageIndexParameter = pageIndex != null ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(string));
    
            var pageSizeParameter = pageSize != null ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_proc_List_tsks_by_tskStatus", userIdParameter, tskStatusParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Get_POForDisplay_Result> Get_POForDisplay(string pnbr, Nullable<int> bPId)
        {
            var pnbrParameter = pnbr != null ?
                new ObjectParameter("pnbr", pnbr) :
                new ObjectParameter("pnbr", typeof(string));
    
            var bPIdParameter = bPId.HasValue ?
                new ObjectParameter("BPId", bPId) :
                new ObjectParameter("BPId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_POForDisplay_Result>("Get_POForDisplay", pnbrParameter, bPIdParameter);
        }
    
        public virtual int sp_taskAction(string pnbr, Nullable<int> bPId, Nullable<int> userId, string actType, string notes)
        {
            var pnbrParameter = pnbr != null ?
                new ObjectParameter("pnbr", pnbr) :
                new ObjectParameter("pnbr", typeof(string));
    
            var bPIdParameter = bPId.HasValue ?
                new ObjectParameter("BPId", bPId) :
                new ObjectParameter("BPId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var actTypeParameter = actType != null ?
                new ObjectParameter("actType", actType) :
                new ObjectParameter("actType", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_taskAction", pnbrParameter, bPIdParameter, userIdParameter, actTypeParameter, notesParameter);
        }
    
        public virtual int sp_proc_del_PO(string actType, string pnbr, string fba, string sku, Nullable<int> userId)
        {
            var actTypeParameter = actType != null ?
                new ObjectParameter("actType", actType) :
                new ObjectParameter("actType", typeof(string));
    
            var pnbrParameter = pnbr != null ?
                new ObjectParameter("pnbr", pnbr) :
                new ObjectParameter("pnbr", typeof(string));
    
            var fbaParameter = fba != null ?
                new ObjectParameter("fba", fba) :
                new ObjectParameter("fba", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_proc_del_PO", actTypeParameter, pnbrParameter, fbaParameter, skuParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_proc_file_Result> sp_proc_file(string actType, Nullable<int> fId, string pnbr, string ftype)
        {
            var actTypeParameter = actType != null ?
                new ObjectParameter("actType", actType) :
                new ObjectParameter("actType", typeof(string));
    
            var fIdParameter = fId.HasValue ?
                new ObjectParameter("FId", fId) :
                new ObjectParameter("FId", typeof(int));
    
            var pnbrParameter = pnbr != null ?
                new ObjectParameter("pnbr", pnbr) :
                new ObjectParameter("pnbr", typeof(string));
    
            var ftypeParameter = ftype != null ?
                new ObjectParameter("ftype", ftype) :
                new ObjectParameter("ftype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_file_Result>("sp_proc_file", actTypeParameter, fIdParameter, pnbrParameter, ftypeParameter);
        }
    
        public virtual ObjectResult<sp_proc_Read_PO_Result> sp_proc_Read_PO(string pnbr)
        {
            var pnbrParameter = pnbr != null ?
                new ObjectParameter("pnbr", pnbr) :
                new ObjectParameter("pnbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_proc_Read_PO_Result>("sp_proc_Read_PO", pnbrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_proc_logistics(string actType, Nullable<int> bPId, string yundan, string carriage, string traiff, string inspec, string notes, string others, Nullable<int> lId, Nullable<int> userId)
        {
            var actTypeParameter = actType != null ?
                new ObjectParameter("actType", actType) :
                new ObjectParameter("actType", typeof(string));
    
            var bPIdParameter = bPId.HasValue ?
                new ObjectParameter("BPId", bPId) :
                new ObjectParameter("BPId", typeof(int));
    
            var yundanParameter = yundan != null ?
                new ObjectParameter("yundan", yundan) :
                new ObjectParameter("yundan", typeof(string));
    
            var carriageParameter = carriage != null ?
                new ObjectParameter("carriage", carriage) :
                new ObjectParameter("carriage", typeof(string));
    
            var traiffParameter = traiff != null ?
                new ObjectParameter("traiff", traiff) :
                new ObjectParameter("traiff", typeof(string));
    
            var inspecParameter = inspec != null ?
                new ObjectParameter("inspec", inspec) :
                new ObjectParameter("inspec", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var othersParameter = others != null ?
                new ObjectParameter("others", others) :
                new ObjectParameter("others", typeof(string));
    
            var lIdParameter = lId.HasValue ?
                new ObjectParameter("lId", lId) :
                new ObjectParameter("lId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_proc_logistics", actTypeParameter, bPIdParameter, yundanParameter, carriageParameter, traiffParameter, inspecParameter, notesParameter, othersParameter, lIdParameter, userIdParameter);
        }
    }
}
