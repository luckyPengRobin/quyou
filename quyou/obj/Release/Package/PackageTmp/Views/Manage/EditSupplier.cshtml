@{
    ViewBag.Title = "EditSupplier";
    Layout = "~/Views/Shared/_Layout.Edit.cshtml";
}

@using Model;
@model SupplierInfo


@using (Ajax.BeginForm("EditSupplier", "Manage", null, new AjaxOptions { HttpMethod = FormMethod.Post.ToString(), OnSuccess = "submitSuccess" }, new { @class = "form-horizontal", id = "mainContent" }))
{

    <div class="container ">


        @Html.TextBoxFor(c => c.Id, new { @class = "hidden" })
        <div class="row">

            <div class="form-group form-group-sm col-sm-6">

                <label class="control-label col-sm-4">供应商代码</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(c => c.EngName, new { @name = "EngName", @id = "EngName", @class = "form-control " })
                    </div>
                </div>

            <div class="form-group form-group-sm col-sm-6">
                <label class="control-label col-sm-4">供应商中文名</label>

                <div class="col-sm-8">
                    @Html.TextBoxFor(c => c.ChsName, new { @name = "ChsName", @id = "ChsName", @class = "form-control" })
                </div>
                </div>
        </div>

        <div class="row">
            <div class="form-group form-group-sm col-sm-6">
                <label class="control-label col-sm-4"><span style="color:red">*</span> 收款账号</label>
                <div class="col-sm-8">

                    @Html.TextBoxFor(c => c.Rcpt_Bank_Nbr, new { @name = "rcptNo", @id = "rcptNo", @class = "form-control" })
                </div>
            </div>
            <div class="form-group form-group-sm col-sm-6">
                <label class="control-label col-sm-4 ">联系人</label>
                <div>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(c => c.Contact, new { @name = "contact", @id = "contact", @class = "form-control" })
                    </div>
                </div>
            </div>

        </div>




        <div class="row">

            <div class="form-group form-group-sm col-sm-6">
                <label class="control-label col-sm-4">QQ</label>
                <div class="col-sm-8">

                    @Html.TextBoxFor(c => c.QQ, new { @name = "QQ", @id = "QQ", @class = "form-control input-sm" })
                </div>
            </div>
            <div class="form-group form-group-sm col-sm-6">
                <label class="control-label col-sm-4">Email</label>
                <div class="col-sm-8">

                    @Html.TextBoxFor(c => c.Email, new { @name = "email", @id = "email", @class = "form-control" })
                </div>
            </div>

        </div>


        <div class="row">

            <div class="form-group form-group-sm col-sm-6">
                <label class="control-label col-sm-4">电话</label>
                <div class="col-sm-8">

                    @Html.TextBoxFor(c => c.Phone, new { @name = "phone", @id = "phone", @class = "form-control" })
                </div>
            </div>


        </div>




    </div>






}



@section scripts{

    <script type="text/javascript">

        
        
            $('#mainContent').bootstrapValidator({
                message: '请检查输入值',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {

                    EngName: {
                        validators: {
                            notEmpty: {
                                message: '供应商代码不能为空'
                            }
                        }
                    },
                    ChsName: {
                        validators: {
                            notEmpty: {
                                message: '供应商名不能为空'
                            }
                        }
                    },
                    Rcpt_Bank_Nbr: {
                        validators: {
                            notEmpty: {
                                message: '收款账号不能为空'
                            }
                        },
                        
                            regexp: {
                                regexp: /^([1-9]{1})(\d{14}|\d{18})$/,
                             message: '请输入正确的收款账号'
                            }
                    },
                    Contact: {
                        validators: {
                            notEmpty: {
                                message: '联系人不能为空'
                            }
                        }
                    },
                    QQ: {
                        validators: {
                            notEmpty: {
                                message: 'QQ账号不能为空'
                            }
                        }

                    },
                    Email: {
                        validators: {
                            notEmpty: {
                                message: '邮箱地址不能为空'
                            },
                            emailAddress: {
                                 message: '邮箱地址格式有误'
                            }
                        }
                    },
                   Phone: {
                    validators: {
                        notEmpty: {
                            message: '电话不能为空'
                        }
                    },
                    regexp: {
                        regexp:/^[0-9_]+$/ ,
                        message: '电话只能是数字'
                    }

                }
            }

            }).on('success.form.bv', function (e) {
                // Prevent form submission 修复bootstrap validator重复向服务端提交bug
                e.preventDefault();
                //alert('validate success');
            });
        


        function execute_validator() {
            var bv = $("#mainContent").data('bootstrapValidator').validate();
            return bv.isValid();
        }
        function form_submit() {

            if (execute_validator()) {
                alert("true");
                $("#mainContent").submit();
                return true;
            }
            return false;
               
           
        }



        // form submit success callback
        function submitSuccess(res) {
            if (res.state) {
                layer.close(index);
                alert("submitsuccess")
                layer.msg(res.msg, { time: 500, icon: 1 });
                window.parent.location.reload(); //刷新父页面
            }
            window.close();
        }

        $(function () {


            $('form').bootstrapValidator({
                message: '请检查输入值',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {

                    engName: {
                        validators: {
                            notEmpty: {
                                message: '供应商代码不能为空'
                            }
                        }
                    },
                    chsName: {
                        validators: {
                            notEmpty: {
                                message: '供应商名不能为空'
                            }
                        }
                    },
                    rcptNo: {
                        validators: {
                            notEmpty: {
                                message: '收款账号不能为空'
                            }
                        }
                    },
                    contact: {
                        validators: {
                            notEmpty: {
                                message: '联系人不能为空'
                            }
                        }
                    },
                    QQ: {
                        validators: {
                            notEmpty: {
                                message: 'QQ账号不能为空'
                            }
                        }

                    },
                    email: {
                        validators: {
                            notEmpty: {
                                message: '邮箱地址不能为空'
                            }
                        }
                    },
                    phone: {
                        validators: {
                            notEmpty: {
                                message: '电话不能为空'
                            }
                        }
                    }
                }


            });


            });


        //function peopleSearch_multiCtr(crnId) {
        //    $(crnId).select2({
        //        ajax: {
        //            cache: false,
        //            dataType: "json",
        //            type: "GET",
        //            url: '../Service/ListUsers2',
        //            delay: 250,
        //            success: function (data) {
        //            },
        //            data: function (params) {
        //                return {
        //                    query: params.term   // 查询的关键字
        //                };
        //            },
        //            processResults: function (data) {
        //                return {
        //                    results: data
        //                };
        //            }
        //        },
        //        placeholder: 'Select a person...',   //需要select控件使用默认默认,或者placeholder无效
        //        allowClear: true,
        //        theme: 'classic',
        //        minimumInputLength: 2,
        //        //minimumResultsForSearch: 5, // at least 20 results must be displayed   myteammodal
        //        maximumSelectionLength: 3, //最多能够选择的个数
        //        tags: false,//允许手动添加
        //        templateResult: function (obj) { return obj.text; },    // 显示查询结果
        //        templateSelection: function (user) { return user.text; },    // 显示选中的对象
        //        escapeMarkup: function (markup) { return markup; }
        //    });
        //}

    </script>



}